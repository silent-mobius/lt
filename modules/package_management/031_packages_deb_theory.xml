<?hard-pagebreak?>
<section><title>deb package management</title>
	<section><title>about deb</title>
		<para>Most people use <command>apt</command> or <command>apt-get</command> to manage their Debian/Ubuntu family of Linux distributions. Both are a front end for <command>dpkg</command> and are themselves a back end for <command>synaptic</command> and other graphical tools.</para>
	</section>
	<section><title>dpkg -l</title>
		<para>The low level tool to work with <command>.deb</command> packages is <command>dpkg</command><indexterm><primary>dpkg(8)</primary></indexterm>. Here you see how to obtain a list of all installed packages on a Debian server.</para>
		<screen>root@debian6:~# dpkg -l | wc -l
265</screen>
		<para>Compare this to the same list on a Ubuntu Desktop computer.</para>
		<screen>root@ubu1204~# dpkg -l | wc -l
2527</screen>
	</section>
	<section><title>dpkg -l $package</title>
 	<para>Here is an example on how to get information on an individual package. The ii at the beginning means the package is installed.</para>
	<screen>root@debian6:~# dpkg -l rsync | tail -1 | tr -s  ' ' 
ii rsync 3.0.7-2 fast remote file copy program (like rcp)</screen>
	</section>
	<section><title>dpkg -S</title>
		<para>You can find the package that installed a certain file on your computer with <command>dpkg -S</command>. This example shows how to find the package for three files on a typical Debian server.</para>
		<screen>root@debian6:~# dpkg -S /usr/share/doc/tmux/ /etc/ssh/ssh_config /sbin/ifconfig 
tmux: /usr/share/doc/tmux/
openssh-client: /etc/ssh/ssh_config
net-tools: /sbin/ifconfig</screen>
	</section>
	<section><title>dpkg -L</title>
		<para>You can also get a list of all files that are installed by a certain program. Below is the list for the <command>tmux</command> package.</para>
		<screen>root@debian6:~# dpkg -L tmux
/.
/etc
/etc/init.d
/etc/init.d/tmux-cleanup
/usr
/usr/share
/usr/share/lintian
/usr/share/lintian/overrides
/usr/share/lintian/overrides/tmux
/usr/share/doc
/usr/share/doc/tmux
/usr/share/doc/tmux/TODO.gz
/usr/share/doc/tmux/FAQ.gz
/usr/share/doc/tmux/changelog.Debian.gz
/usr/share/doc/tmux/NEWS.Debian.gz
/usr/share/doc/tmux/changelog.gz
/usr/share/doc/tmux/copyright
/usr/share/doc/tmux/examples
/usr/share/doc/tmux/examples/tmux.vim.gz
/usr/share/doc/tmux/examples/h-boetes.conf
/usr/share/doc/tmux/examples/n-marriott.conf
/usr/share/doc/tmux/examples/screen-keys.conf
/usr/share/doc/tmux/examples/t-williams.conf
/usr/share/doc/tmux/examples/vim-keys.conf
/usr/share/doc/tmux/NOTES
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/tmux.1.gz
/usr/bin
/usr/bin/tmux</screen>
	</section>
	<section><title>dpkg</title>
		<para>You could use <command>dpkg -i</command> to install a package and <command>dpkg -r</command> to remove a package, but you'd have to manually keep track of dependencies. Using <command>apt-get</command> or <command>apt</command> is much easier.</para>
	</section>
</section>
<?hard-pagebreak?>
<section><title>apt-get</title>
	<para><command>Debian</command> has been using <command>apt-get</command><indexterm><primary>apt-get(8)</primary></indexterm> to manage packages since 1998. Today Debian and many Debian-based distributions still actively support <command>apt-get</command>, though some experts claim <command>apt</command> is better at handling dependencies than <command>apt-get</command>.</para>
	<para>Both commands use the same configuration files and can be used alternately; whenever you see <command>apt-get</command> in documentation, feel free to type <command>apt</command>.</para>
	<para>We will start with <command>apt-get</command> and discuss <command>apt</command> in the next section.</para>
	<section><title>apt-get update</title>
		<para>When typing <command>apt-get update</command> you are downloading the names, versions and short description of all packages available on all configured repositories for your system.</para>
		<para>In the example below you can see some repositories at the url <command>be.archive.ubuntu.com</command> because this computer was installed in Belgium. This url can be different for you.</para>
		<screen>root@ubu1204~# apt-get update
Ign http://be.archive.ubuntu.com precise InRelease
Ign http://extras.ubuntu.com precise InRelease
Ign http://security.ubuntu.com precise-security InRelease            
Ign http://archive.canonical.com precise InRelease                                         
Ign http://be.archive.ubuntu.com precise-updates InRelease                                 
...
Hit http://be.archive.ubuntu.com precise-backports/main Translation-en                                                             
Hit http://be.archive.ubuntu.com precise-backports/multiverse Translation-en                                                       
Hit http://be.archive.ubuntu.com precise-backports/restricted Translation-en                                                       
Hit http://be.archive.ubuntu.com precise-backports/universe Translation-en                                                         
Fetched 13.7 MB in 8s (1682 kB/s)                                                                                                  
Reading package lists... Done
root@mac~#</screen>
	<para>Run <command>apt-get update</command> every time before performing other package operations.</para>
	</section>
	<section><title>apt-get upgrade</title>
		<para>One of the nicest features of <command>apt-get</command> is that it allows for a secure update of <command>all software currently installed</command> on your computer with just <command>one</command> command.</para>
		<screen>root@debian6:~# apt-get upgrade
Reading package lists... Done
Building dependency tree       
Reading state information... Done
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
root@debian6:~# </screen>
		<para>The above screenshot shows that all software is updated to the latest version available for my distribution.</para>
	</section>
	<section><title>apt-get clean</title>
		<para><command>apt-get</command> keeps a copy of downloaded packages in <command>/var/cache/apt/archives</command>, as can be seen in this screenshot.</para>
		<screen>root@ubu1204~# ls /var/cache/apt/archives/ | head
accountsservice_0.6.15-2ubuntu9.4_i386.deb
apport_2.0.1-0ubuntu14_all.deb
apport-gtk_2.0.1-0ubuntu14_all.deb
apt_0.8.16~exp12ubuntu10.3_i386.deb
apt-transport-https_0.8.16~exp12ubuntu10.3_i386.deb
apt-utils_0.8.16~exp12ubuntu10.3_i386.deb
bind9-host_1%3a9.8.1.dfsg.P1-4ubuntu0.4_i386.deb
chromium-browser_20.0.1132.47~r144678-0ubuntu0.12.04.1_i386.deb
chromium-browser-l10n_20.0.1132.47~r144678-0ubuntu0.12.04.1_all.deb
chromium-codecs-ffmpeg_20.0.1132.47~r144678-0ubuntu0.12.04.1_i386.deb</screen>
		<para>Running <command>apt-get clean</command> removes all .deb files from that directory.</para>
		<screen>root@ubu1204~# apt-get clean
root@ubu1204~# ls /var/cache/apt/archives/*.deb
ls: cannot access /var/cache/apt/archives/*.deb: No such file or directory</screen>
	</section>
	<section><title>apt-cache search</title>
		<para>Use <command>apt-cache search</command> to search for availability of a package. Here we look for <command>rsync</command>.</para>
		<screen>root@ubu1204~# apt-cache search rsync | grep ^rsync
rsync - fast, versatile, remote (and local) file-copying tool
rsyncrypto - rsync friendly encryption</screen>
	</section>
	<section><title>apt-get install</title>
		<para>You can install one or more applications by appending their name behind <command>apt-get install</command>. The screenshot shows how to install the <command>rsync</command> package.</para>
		<screen>root@ubu1204~# apt-get install rsync
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  rsync
0 upgraded, 1 newly installed, 0 to remove and 8 not upgraded.
Need to get 299 kB of archives.
After this operation, 634 kB of additional disk space will be used.
Get:1 http://be.archive.ubuntu.com/ubuntu/ precise/main rsync i386 3.0.9-1ubuntu1 [299 kB]
Fetched 299 kB in 0s (740 kB/s)
Selecting previously unselected package rsync.
(Reading database ... 323649 files and directories currently installed.)
Unpacking rsync (from .../rsync_3.0.9-1ubuntu1_i386.deb) ...
Processing triggers for man-db ...
Processing triggers for ureadahead ...
Setting up rsync (3.0.9-1ubuntu1) ...
 Removing any system startup links for /etc/init.d/rsync ...
root@ubu1204~#</screen>
	</section>
	<section><title>apt-get remove</title>
		<para>You can remove one or more applications by appending their name behind <command>apt-get remove</command>. The screenshot shows how to remove the <command>rsync</command> package.</para>
		<screen>root@ubu1204~# apt-get remove rsync
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages will be REMOVED:
  rsync ubuntu-standard
0 upgraded, 0 newly installed, 2 to remove and 8 not upgraded.
After this operation, 692 kB disk space will be freed.
Do you want to continue [Y/n]? 
(Reading database ... 323681 files and directories currently installed.)
Removing ubuntu-standard ...
Removing rsync ...
 * Stopping rsync daemon rsync                                                                                                                                                                 [ OK ] 
Processing triggers for ureadahead ...
Processing triggers for man-db ...
root@ubu1204~#</screen>
		<para>Note however that some configuration information is not removed.</para>
		<screen>root@ubu1204~# dpkg -l rsync | tail -1 | tr -s ' ' 
rc rsync 3.0.9-1ubuntu1 fast, versatile, remote (and local) file-copying tool</screen>
	</section>
	<section><title>apt-get purge</title>
		<para>You can purge one or more applications by appending their name behind <command>apt-get purge</command>. Purging will also remove all existing configuration files related to that application. The screenshot shows how to purge the <command>rsync</command> package.</para>
		<screen>root@ubu1204~# apt-get purge rsync
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages will be REMOVED:
  rsync*
0 upgraded, 0 newly installed, 1 to remove and 8 not upgraded.
After this operation, 0 B of additional disk space will be used.
Do you want to continue [Y/n]? 
(Reading database ... 323651 files and directories currently installed.)
Removing rsync ...
Purging configuration files for rsync ...
Processing triggers for ureadahead ...
root@ubu1204~#</screen>
		<para>Note that <command>dpkg</command> has no information about a purged package, except that it is uninstalled and no configuration is left on the system.</para>
		<screen>root@ubu1204~# dpkg -l rsync | tail -1 | tr -s ' ' 
un rsync &#060;none&#062; (no description available)</screen>
	</section>
</section>
<?hard-pagebreak?>
<section><title>apt</title>
	<para>Most people use <command>apt</command><indexterm><primary>apt(8)</primary></indexterm> for package management on Debian, Mint and Ubuntu systems.</para>
	<para>To synchronize with the repositories.</para>
	<screen>apt update</screen>
	<para>To patch and upgrade all software to the latest version on Debian.</para>
	<screen>apt upgrade</screen>
	<para>To patch and upgrade all software to the latest version on Ubuntu and Mint.</para>
	<screen>apt safe-upgrade</screen>
	<para>To install an application with all dependencies.</para>
	<screen>apt install $package</screen>
	<para>To search the repositories for applications that contain a certain string in their name or description.</para>
	<screen>apt search $string</screen>
	<para>To remove an application.</para>
	<screen>apt remove $package</screen>
	<para>To remove an application and all configuration files.</para>
	<screen>apt purge $package</screen>
</section>
<?hard-pagebreak?>
<section><title>apt</title>
	<para>Both <command>apt-get</command> and <command>apt</command> use the same configuration information in <command>/etc/apt/</command>. Thus adding a repository for one of them, will automatically add it for both.</para>
	<section><title>/etc/apt/sources.list</title>
		<para>The resource list used by <command>apt-get</command> and <command>apt</command> is located in <command>/etc/apt/sources.list</command><indexterm><primary>/etc/apt/sources.list</primary></indexterm>. This file contains a list of http or ftp sources where packages for the distribution can be downloaded.</para>
		<para>This is what that list looks like on my Debian server.</para>
		<screen>root@debian6:~# cat /etc/apt/sources.list
deb http://ftp.be.debian.org/debian/ squeeze main
deb-src http://ftp.be.debian.org/debian/ squeeze main

deb http://security.debian.org/ squeeze/updates main
deb-src http://security.debian.org/ squeeze/updates main

# squeeze-updates, previously known as 'volatile'
deb http://ftp.be.debian.org/debian/ squeeze-updates main
deb-src http://ftp.be.debian.org/debian/ squeeze-updates main</screen>
		<para>On my Ubuntu there are four times as many online repositories in use.</para>
		<screen>root@ubu1204~# wc -l /etc/apt/sources.list
63 /etc/apt/sources.list</screen>
	</section>
	<para>There is much more to learn about <command>apt</command>, explore commands like <command>add-apt-repository</command>, <command>apt-key</command> and <command>apropos apt</command>.</para>
</section>
